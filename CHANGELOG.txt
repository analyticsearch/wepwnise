              __________                
__  _  __ ____\______   \__  _  ______  
\ \/ \/ // __ \|     ___/\ \/ \/ /    \ 
 \     /\  ___/|    |     \     /   |  \
  \/\_/  \___  >____|      \/\_/|___|  /
             \/                      \/ 
========================================

NOTES
=====
Basically, Metasploit has the limitation of not being able to have one handler that
will automatically stage the correct second stage dependent on the architecture calling in.

This made it so I had to use separate LHOST and LPORTs. However, this is good, we can use this
to direct payloads where we seem fit.

To-Do List
==========
	* If registry path has no "-EAF", we take it as protected. If it has "-EAF" we remove it from the list of bad
	  paths. Or we do not include it at all.
	* Add toggle for "stop on successful injection", currently always on so as to reduce noise.
	* If "stop on successful injection" is off, add --max-inject to limit max number of injections.
	* Add domains to be allowed in reverse_tcp LHOST. Currently it force validates IP addresses.

VERSION 0.21 BETA
=================
Generator
	* Added ability to recurse directories and use all found binaries within that directory (Slow performance)
	* Uses a massive cached list from binary-paths.txt of most default Windows binaries
	* Will loop through Program Files
	* More accurate injection

Macro Template
	* Addition of directory recursive search for .exe's at specified paths in directory-paths.txt (Slow performance)
	* Now uses more accurate registry path to determine regular expressions for EMET protected paths. The
	  macro will regex a binary's path to the EMET protected path to determine whether EMET will protect it before
	  attempting injection
	* Fixed minor errors in quotation usage such as: "C:\Windows\syswow64\ping.exe" /t 127.0.0.1

VERSION 0.1 BETA
================
Generator
	* Initial Python Template for Generation
	* Allows for insertion of binary paths
	* Allows specification of MsgBox text
	* Allows you to turn off MsgBox
	* User can manually select x86 and x64 payloads to use
	* Ability to change where the payloads call back to individually
	* Currently does not support spaces in the binary paths due to not parsing double quotes

	* Validates IP address (may allow domains at a later stage to be used with reverse_tcp for example)
	* Remind myself to add variable to control virtual alloc space in case some large payloads are used

Macro Template
	* Enumeration of EMET protected processes
	* Automatic Windows architecture enumeration
	* Automatic Target binary architecture detection
	* Automatic selection of payload to inject
	* MsgBox to stop some automated analysis tools
	* Makes use of my technique to use native VB to inject into an unprotected process
	* Stops further injection when a successful injection has taken place	(May add a toggle later)
	* Current relies on %TEMP% directory due to inability to make use of .Exec without a popup
	* Automatically determines what VBA version to use
